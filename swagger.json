{
    "swagger": "2.0",
    "info": {
        "title": "Projeto VetClinic",
        "version": "1.0",
        "description": "Documentação de API, para o primeiro desafio do Programa de Bolsas Back-End com Node.js da empresa Compass.UOL ."
    },
    "basePath": "/",
    "tags": [
        {
            "name": "Tutor",
            "description": "Operações relacionadas com tutores"
        },
        {
            "name": "Pet",
            "description": "Operações relacionadas com pets"
        }
    ],
    "paths": {
        "/tutor": {
            "get": {
                "tags": ["Tutor"],
                "summary": "Procura por um tutor",
                "description": "Retorna uma lista de tutores e seus pets.",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Lista de tutores e seus pets.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tutor"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": []
            },
            "post": {
                "tags": ["Tutor"],
                "summary": "Adiciona um novo tutor",
                "description": "Adiciona um novo tutor ao sistema.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tutor",
                        "description": "Objeto tutor a ser adicionado.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tutor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tutor adicionado com sucesso."
                    },
                    "400": {
                        "description": "Bad request. Dados de entrada invalidos."
                    }
                },
                "security": []
            }
        },
        "/tutor/{id}": {
            "put": {
                "tags": ["Tutor"],
                "summary": "Atualiza um tutor",
                "description": "Atualiza um tutor ja presente no sistema.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID do tutor a ser atualizado.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "tutor",
                        "description": "Atualiza o objeto tutor.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tutor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tutor atualizado com sucesso."
                    },
                    "400": {
                        "description": "Bad request. Dados de entrada invalidos."
                    },
                    "404": {
                        "description": "Tutor não encontrado."
                    }
                },
                "security": []
            },
            "delete": {
                "tags": ["Tutor"],
                "summary": "Deleta um tutor",
                "description": "Deletar um tutor do sistema.",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID do tutor a ser deletado.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tutor deletado com sucesso."
                    },
                    "404": {
                        "description": "Tutor não encontrado."
                    }
                },
                "security": []
            }
        },
        "/pet": {
            "get": {
                "tags": ["Pet"],
                "summary": "Procura pets",
                "description": "Retorna lista de pets.",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Uma lista de pets.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": []
            },
            "post": {
                "tags": ["Pet"],
                "summary": "Adiciona um novo pet",
                "description": "Adiciona um novo pet a um tutor específico.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID do tutor que o pet pertence.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "pet",
                        "description": "Objeto Pet a ser adicionado.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet adicionado com sucesso."
                    },
                    "400": {
                        "description": "Bad request. Dados de entrada invalidos."
                    }
                },
                "security": []
            }
        },
        "/pet/{idPet}/tutor/{idTut}": {
            "put": {
                "tags": ["Pet"],
                "summary": "Atualiza um pet",
                "description": "Atualiza um pet existente no sistema.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idPet",
                        "description": "ID do pet a ser atualizado.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "idTut",
                        "description": "ID do tutor a qual o pet pertence.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "pet",
                        "description": "Atualiza o objeto Pet.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet atualizado com sucesso."
                    },
                    "400": {
                        "description": "Bad request. Dados de entrada invalidos."
                    },
                    "404": {
                        "description": "Pet não encontrado."
                    }
                },
                "security": []
            },
            "delete": {
                "tags": ["Pet"],
                "summary": "Deleta um pet",
                "description": "Deletar um pet do sistema.",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idPet",
                        "description": "ID do pet a ser deletado.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "idTut",
                        "description": "ID do tutor a qual o pet pertence.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet deletado com sucesso."
                    },
                    "404": {
                        "description": "Pet não encontrado."
                    }
                },
                "security": []
            }
        }
    },
    "definitions": {
        "Tutor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID do tutor."
                },
                "name": {
                    "type": "string",
                    "description": "Nome do tutor."
                },
                "phone": {
                    "type": "string",
                    "description": "Número de telefone do tutor."
                },
                "email": {
                    "type": "string",
                    "description": "Email do tutor."
                },
                "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "Data de nascimento do tutor."
                },
                "zip_code": {
                    "type": "string",
                    "description": "CEP do tutor."
                }
            }
        },
        "Pet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID do pet."
                },
                "name": {
                    "type": "string",
                    "description": "Nome do pet."
                },
                "species": {
                    "type": "string",
                    "description": "Espécie do pet."
                },
                "carry": {
                    "type": "string",
                    "description": "Carry do pet."
                },
                "weight": {
                    "type": "integer",
                    "description": "Peso do pet."
                },
                "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "Data de nascimento do pet."
                },
                "idTutor": {
                    "type": "integer",
                    "description": "ID do tutor do pet."
                }
            }
        }
    }
}
